// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.core.library {	import flash.display.DisplayObject;	import flash.display.MovieClip;	import bubbletools.core.async.SWFLoader;	import bubbletools.core.threading.Requesting;	import bubbletools.util.Debug;	import flash.display.LoaderInfo;	import flash.display.Sprite;	public class SWFInstance extends Requesting {		private var swfUrl:String;		private var swfContainer:Sprite;		private var swfParams:Array;		private var swfWidth:Number;		private var swfHeight:Number;		private var listeners:Array;		private var myLoader:SWFLoader;		public function SWFInstance(swfUrl:String, swfWidth:Number, swfHeight:Number, swfParams:Array) {			idName = "SWF_Instance";			swfContainer = new Sprite();			this.swfUrl = swfUrl;			this.swfWidth = swfWidth;			this.swfHeight = swfHeight;			this.swfParams = swfParams;			listeners = new Array();		}		public function container():Sprite {			return swfContainer;		}		public function targetSWF():MovieClip {			return myLoader.targetContent;		}		public function addLoadListener(listener:Object):void {			listeners.push(listener);		}		public function load():void {			myLoader = new SWFLoader();			setHandler(SWFLoaded);			setError(SWFFailed);			myLoader.setParams(swfUrl, swfContainer, this, swfParams);			myLoader.startLoad();		}		public function SWFLoaded(s:LoaderInfo):void {			swfContainer.scaleX = swfWidth / s.width;			swfContainer.scaleY = swfHeight / s.height;			for (var x:String in listeners) {				listeners[x].completedLoad();			}			listeners = new Array();		}		public function SWFFailed():void {			Debug.output(this, "SWF load failed!");		}	}}