// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.core.threading {		import bubbletools.core.threading.Threaded;	public class Thread {				private var threadItems:Array;		private var currentAction:Number;		private var id:Number;		private var isComplete:Boolean;				public function Thread(id:Number) {			this.id = id;			ThreadManager.log("[Thread] New Thread being created with id = "+id, false);			threadItems = new Array();			currentAction = -1;			isComplete = false;		}		public function startThread():void {			ThreadManager.log("[Thread] Thread "+id+" starting", true);						// Reset thread item complete status in case this thread has been run already			for(var t:String in threadItems) {				threadItems[t].setIncomplete();			}						stepThread();		}		public function hasCompleted():Boolean{			return(isComplete);		}		public function addCompleteEvent(threadedObj:IThreaded, returnClass:IThreaded, nextMethod:Function):void {			threadItems.push(threadedObj);			ThreadManager.log("[Thread] Adding item to thread : Length = "+threadItems.length, false);			threadItems[threadItems.length-1].addReturnClass(returnClass);			threadItems[threadItems.length-1].addReturnHandler(nextMethod);			threadItems[threadItems.length-1].setThreadId(this.id);		}		public function terminateThread():void {			threadItems = new Array();			isComplete = true;		}		public function stepThread():void {			ThreadManager.log("[Thread] stepThread called in Thread :"+id, false);			if (threadItems[currentAction+1] != null) {				currentAction++;				ThreadManager.log("[Thread] Thread "+id+" setting currentAction = "+currentAction, false);				ThreadManager.log("[Thread] About to execute doNext in "+threadItems[currentAction].idName, false);				threadItems[currentAction].doNext();			} else {				isComplete = true;				ThreadManager.log("[Thread] Thread "+id+" ended.", true);			}		}	}}