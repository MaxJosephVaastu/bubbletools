// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.ui.framework {	import flash.system.LoaderContext;		import flash.display.Loader;	import flash.net.URLRequest;	import flash.display.LoaderInfo;	import flash.events.*;	import bubbletools.util.Pointdata;	import bubbletools.ui.eventing.UIEvent;	import bubbletools.ui.eventing.UIEventType;	import bubbletools.ui.eventing.UIEventManager;	import bubbletools.ui.framework.InterfaceComponent;	import bubbletools.ui.interfaces.IParameters;	import bubbletools.ui.parameters.SWFDisplayParameters;	import bubbletools.ui.framework.ComponentView;	import bubbletools.util.MouseEventCapture;	public class InterfaceSWFDisplay extends InterfaceComponent {			private var parameters:SWFDisplayParameters;			function InterfaceSWFDisplay(parentComponent:InterfaceComponent){			super(parentComponent);			componentType = "SWFDisplay";			allowSubcomponents = false; 		}			//  =====================================================================================================		//  Required Override Methods		//			public override function setParameters(newParameters:IParameters):void {			globalParameters = newParameters;			parameters = SWFDisplayParameters(newParameters);		}		public override function displayComponent():void {			loadSWF();		}			public override function handleMouseEvent(clickType:String):void {}			//  =====================================================================================================		//  Custom Methods		//			public function displaySWF(swfUrl):void {			parameters.setSWFUrl(swfUrl);			loadSWF();		}		public function loadSWF():void {			if(parameters.getSWF()) {				parameters.getSWF().addLoadListener(this);				view.setContents(parameters.getSWF().container())				parameters.getSWF().load();			}		}				public function swfLoaded():void {			bubbleEvent("swf_loaded");		}	 	}}