// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.ui.parameters {		import flash.display.Sprite;	import bubbletools.util.Pointdata;	import bubbletools.ui.parameters.InterfaceParameters;	import bubbletools.ui.interfaces.IParameters;	import bubbletools.ui.main.ComponentTypes;	import bubbletools.ui.main.ComponentType;	import bubbletools.ui.framework.UI;	import bubbletools.util.Debug;		public class TabBarParameters extends InterfaceParameters {			private var listedType:ComponentType;		private var listedTypeParameters:InterfaceParameters;				private var tabItemList:Array;		private var spacing:Number = 0;								//	default option is items flush next to each other		private var direction:String = "right";						//	default is a bar that lists left to right                         		private var dataSource:Array;		private var tabData:Array;				public function TabBarParameters(){			super();			setListedType("PanelItem", new InterfaceParameters());	//  default listed item is a InterfacePanelItem			componentType = "TabBar";			backgroundColor = 0x00000000;							//	tab background default is transparent			outline = 0;													}		// Data source to construct the tab bar		public function setDataSource(dataSource:Array):void {			this.dataSource = dataSource;		}		public function getDataSource():Array {			return(dataSource);		}		// Change the type listed in the menu		public function setListedType(listedTypeName:String, listedTypeParameters:IParameters):void {			if(ComponentTypes.instance().hasType(listedTypeName)) {				this.listedType = ComponentTypes.instance().getType(listedTypeName);				this.listedTypeParameters = InterfaceParameters(listedTypeParameters);			} else {				Debug.output(this, "WARNING : Listed type for a TabBar does not exist");			}		}		public function getListedType():ComponentType {			return(listedType);		}		public function getListedParameters():InterfaceParameters {			return(listedTypeParameters)		}		// Direction		public function setTabDirection(direction:String):void {			this.direction = direction;		}		public function getTabDirection():String {			return(direction);		}		// Spacing		public function setListSpacing(spacing:Number):void {			this.spacing = spacing;		}		public function getListSpacing():Number {			return(spacing);		}		// Array for listed components 		public function setItemList(tabItemList:Array):void {			this.tabItemList = tabItemList;		}		public function getItemList():Array {			return(tabItemList);		}		}}