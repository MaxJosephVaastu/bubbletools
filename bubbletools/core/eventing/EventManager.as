// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.core.eventing {	import bubbletools.core.eventing.IEvent;	import bubbletools.util.Debug;	public class EventManager {		private static var _instance:EventManager = null;		private var events:Array;		private var eventCount:Number;		private var eventWatcher:uint;		public static function instance():EventManager {			if (EventManager._instance == null) {				EventManager._instance = new EventManager();			}			return EventManager._instance;		}		public function EventManager() {			events = new Array();			eventCount = 0;		}		private function listEvents():void {			Debug.output(this, "EventManger : event count is " + eventCount);			Debug.output(this, "EventManger : events array length is " + events.length);			for (var i:Number = 0; i < events.length; i++) {				Debug.output(this, events[i].getType() + " --> " + events[i].name);			}		}		private function validateEvent(name:String, info:Object, eventType:Class):Boolean {			if (isData(name) && isData(info) && isData(eventType)) {				return (true);			} else {				return (false);			}		}		private function isData(o:Object):Boolean {			if ((o != null)) {				return (true);			} else {				return (false);			}		}		public function createEvent(name:String, info:Object, eventType:Class):IEvent {			var id:int = events.length;			events.push(new eventType(name, info, id));			var newEvent:IEvent = events[id];			eventCount++;			return (newEvent);		}		public function expireEvent(id:int):void {			var removedEventList:Array = events.splice(id, 1);			delete(removedEventList[0]);			removedEventList = null;			eventCount = events.length;		}	}}