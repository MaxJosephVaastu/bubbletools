// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.ui.parameters {	import bubbletools.ui.interfaces.IParameters;	import bubbletools.ui.main.ComponentType;	import bubbletools.ui.main.ComponentTypes;	import bubbletools.util.Debug;	public class TabBarParameters extends InterfaceParameters {		private var listedType:ComponentType;		private var listedTypeParameters:InterfaceParameters;		private var spacing:Number = 0; //	default option is items flush next to each other		private var direction:String = "right"; //	default is a bar that lists left to right                         		private var tabData:Array;		public function TabBarParameters() {			super();			setListedType("PanelItem", new InterfaceParameters()); //  default listed item is a BTPanelItem			componentType = "TabBar";			backgroundColor = 0x00000000; //	tab background default is transparent			outline = 0;		}				// Change the type listed in the menu		public function setListedType(listedTypeName:String, listedTypeParameters:IParameters):void {			if (ComponentTypes.instance().hasType(listedTypeName)) {				this.listedType = ComponentTypes.instance().getType(listedTypeName);				this.listedTypeParameters = InterfaceParameters(listedTypeParameters);			} else {				Debug.output(this, "WARNING : Listed type for a TabBar does not exist");			}		}		public function getListedType():ComponentType {			return (listedType);		}		public function getListedParameters():InterfaceParameters {			return (listedTypeParameters)		}		// Direction		public function setTabDirection(direction:String):void {			this.direction = direction;		}		public function getTabDirection():String {			return (direction);		}		// Spacing		public function setTabSpacing(spacing:Number):void {			this.spacing = spacing;		}		public function getTabSpacing():Number {			return (spacing);		}	}}