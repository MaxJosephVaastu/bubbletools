// bubbletools.* ===============================================================================// BubbleTools™ Web Application and User Interface Component Architecture for Actionscript 3// ©2007 Michael Szypula.  Any modifications to this file must keep this license block intact.// Developer : Michael Szypula// Contact : michael.szypula@gmail.com// License Information : Contact Developer to obtain license agreement.// =================================================================================================package bubbletools.util {		public class Strings {		public static var lineBreak:String = "\r\n";		public static var singleBreak:String = "\r";		public static var lineOnly:String = "\n";		public static function toSingleLine(str:String):String {		var removed:String = str.split(lineOnly).join("");		return removed;	}		public static function removeTrailing(str:String):String {		var i:Number = 0;		while((str.charAt(i) == " ") || (str.charAt(i) == String.fromCharCode(0009))) {			i++;		}		str = str.substr(i);		return(str);	}		public static function removeLeading(str:String):String {		var i:Number = str.length-1;		while((str.charAt(i) == " ")  || (str.charAt(i) == String.fromCharCode(0009))) {			i--;		}		str = str.substr(0,i+1);		return(str);	}		public static function replaceInString(subject:String, original:String, replacement:String ):String	{		if(subject.lastIndexOf(original)) {			return subject.split(original).join(replacement);		} else {			return subject;		}	}		public static function getTextBetween(subject:String, startString:String, endString:String ):Array {				var textBetween:Array = new Array();		var startId:Number 	= 0;		var endId:Number = startString.length;				if((!isNaN(subject.indexOf(startString))) && (!isNaN(subject.indexOf(endString)))) {						while((startId = subject.indexOf(startString, startId)) > 0 && (endId = subject.indexOf(endString, startId+startString.length )) > 0) {				textBetween.push(subject.slice(startId+startString.length, endId));				startId = endId+endString.length;				endId = startId+startString.length;			}			return textBetween;				} else {			Debug.output(Strings, "Text not found");			return null;		}			}	}}